#!/usr/bin/env python3
import i3ipc


def new_layout(window):
    if not window.rect:
        return None

    if window.layout == 'tabbed' or window.layout == 'stacked':
        return None

    width = window.rect.width
    if width < 960:
        return 'v'
    else:
        return 'h'


def check(window, parent):
    if len(window.nodes):
        for node in window.nodes:
            check(node, window)
        return
    nl = new_layout(window)
    if not nl:
        return
    if parent.layout.startswith('split') and parent.layout[-1] == nl:
        return
    win_id = window.window
    if win_id:
        i3.command(f'[id={win_id}] split {nl}')


def on_event(i3, e):
    root = i3.get_tree()
    check(root, None)


i3 = i3ipc.Connection()
i3.on("window::new", on_event)
i3.on("window::close", on_event)
i3.on("window::move", on_event)
i3.on("window::resize", on_event)
i3.main()

