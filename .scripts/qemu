#!/usr/bin/env python3
import sys
import subprocess
import os
import itertools

img_help = "qemu img [name] size"

def img(*args):
    if len(args) == 0 or len(args) == 1 and (args[0] in ["-h", "--help"]):
        print(img_help)
        return

    if not args[0].endswith("img"):
        args = ["disk.img"] + list(args)

    p = subprocess.Popen(["qemu-img", "create", "-f", "qcow2", args[0], args[1]])
    p.wait()

run_help = "qemu run [img_name] [options]"
run_options = """
Set cdrom:
-cdrom disk.iso

Forward port from guest to host:
-nic user,hostfwd=tcp::10022-:22

Expose usb device to guest:
-device usb-host,vendorid=0x0a5c,productid=0x5804

Command line control:
-monitor stdio
"""

def run(*args):
    if len(args) == 1 and (args[0] in ["-h", "--help"]):
        print(run_help)
        print(run_options)
        return

    base_args = {
        "-daemonize": "",
        "-enable-kvm": "",
        "-smp": "4",
        "-m": "2048",
        "-hda": "",
        "-soundhw": "hda",
        "-nic": "user",
        "-usb": "",
        "-device": "usb-tablet",
    }
    if len(args) and args[0].endswith("img"):
        base_args["-hda"] = args[0]
        rest = args[1:]
    else:
        imgs = [e for e in os.listdir() if e.endswith("img")]
        if len(imgs) != 1:
            print("Found multiple images: {}".format(" ".join(imgs)))
            print("Please specify image")
            return
        else:
            base_args["-hda"] = imgs[0]
            rest = args

    for a in args:
        if a in ["-smp", "-m", "-hda", "-soundhw", "-nic"] and a in base_args:
            del base_args[a]
        if a == "-monitor":
            del base_args["-daemonize"]

    flat_args = [e for e in itertools.chain.from_iterable(base_args.items()) if e != '']
    p = subprocess.Popen(["qemu-system-x86_64"] + flat_args + list(rest))
    p.wait()

def main():
    if len(sys.argv) == 1:
        print(f"Commands are '{img_help}' or '{run_help}'")
        return

    if sys.argv[1] == 'img':
        img(*sys.argv[2:])
        return

    if sys.argv[1] == 'run':
        run(*sys.argv[2:])
        return

if __name__ == "__main__":
    main()
